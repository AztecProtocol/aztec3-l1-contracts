// SPDX-License-Identifier: UNLICENSED
pragma solidity >=0.8.18;

import {Test} from "forge-std/Test.sol";

import {Decoder} from "@aztec3/core/Decoder.sol";
import {Rollup} from "@aztec3/core/Rollup.sol";

contract DecodeHelper is Decoder {
  function decode(bytes calldata _l2Block)
    external
    pure
    returns (uint256, bytes32, bytes32, bytes32)
  {
    return _decode(_l2Block);
  }

  function computeDiffRoot(bytes calldata _l2Block) external pure returns (bytes32) {
    return _computeDiffRoot(_l2Block);
  }
}

// Blocks generated with https://gist.github.com/LHerskind/dccc762ee539b7b0984bf51af6f51dbb
contract DecoderTest is Test {
  Rollup internal rollup;
  DecodeHelper internal helper;

  bytes block_0 =
    hex"0000000000000000c1806fb5caeb92b0db338ce401773f45cccb358d6d4d1bad3b5a08434bdc4ed100000000b3ca144ed9b63ad7f53831fee93df78356eb7ca97eec5078195442f0b5d935b600000000bc74f656e006f91a2021a190b855d5b2057fa2c30fa298570e6521626bb64cd6000000005d17477e1d5439a453dcf975d81e7827439d06696961cc1c75ee20b3aac13549000000003162167cfcd23ec8a18ecdcd0c215713c39972e1885263ecf563166e9ad483790000002002d39feec7377bb890dc52b105208259532ec39601f9f53046c9b45d3b24670f000000202a1943f5041801d3b30d4553d4d6828e4753a16466c33fe0e457ca4fff3689ad00000008a03276037876b0a1bdfe71854eda8c0724477e078582d1ab1aefa497f2bc0dba000000019fdbf147878224fc1b64592242cea18503449cfaa965764abbd7b9b7a8d3575000000001cce778d2aa7debbadab4abb1da62b177be34e827d819f0ddc9ca56c107d5af7d000000205f6ba087e4112bb889ab6ac63a74abdecf064a1c8ce6cd7fe1bb613ab2393cc09e6e73f958801ec148715df22da5f3cdaa0593354a04470889a586bad683da4db91e5db16af028a12a8caefd576d32a74ac120407967a8014d72cad5085820f24eb54cda9ec7cec46df4b9688b184d0dea18b59dfd68ed19f9e8b0fa23a99de1c4691b2dab87eb24cf72665cc005d5144ccd69c48a880dd13b0594012d9e930d835a6ab247b6964ed2444035d7a96f9174a1aafe6b86dc934bfac6adc0ae7290520f5bc0a8e477c4d5e42239a6c3adbeefd86a21ee421e85d61c8ec9c0b4764ba62d2612c14c8c4bd9b4499f2e2ff24c495c350e2e8b83cdd1ed27e3c0b4f8cb1920adece16355a2612aa88f48cac8102657cb9f1d456cb3d263e2c2787e4a5cc417c04cdc1752e1fddaae1b9dc709727d22269f79e55982fd52c79d7bdb04367aaa49284d398dcf48ef0db5d353d92e52a3529431b5a1f1ad0d03269998d06875ebfd6acd4ce703c7206e22088156aa8a2de2cbdca7316ffc0bf056cffc2ee35db01b93cec244e8a970ebddc2816c582318c51fb23336fc213504cfe8f3ac39245410a0a677110ab7de23b78e41f98b648550a596c8df69a0407d2dcb686a343777955eeaaa8ca093e04f53a3517ea7b9d8a491f10033128626b5dff1f4ce50b6efb3e48e966efd8e5c3666b57d9e48d50b6b3400f50ca12edcc6004489ff1d3aa90011d79b003b603155b270b183ccaed4bcbeeb3c5036ac29b8684ba16d84983e5ab16e9d1a377428958fbd09aeae6f6e69a72d108a2be42135d459b2fc2ae52703e6c8ba9d7b3dba87fa5475f67560d464fe5edd2cbd20fc7838fdecf99dd42bddfee0c275563cb3f893a8793db306ef02553a35b61ce5631e2986961c6d769e1cb8c841db42bd23abb940f32da10d3f297b294a96afad312f0a30a1196f9024125019c4b82154ef7f0af1104a6f8bdca62e674d2d02099e4acf9af2f0a8abd6ef966a52f9dee5efd1a1e2619477620a47e503ad694271603c935df4ee5d294cf39aafb02209a09c9a45fb14704b8bec73fe4cd693852a76fc01354baa2f6045ddf74195e167025152aea30f40ef3c2079e9c4ade365b522d623fdd161e9fadc779fc86752dd509e5ce2a8f6e0aa3a9d4f77862739b9472a17180754e8e7d417f9fd7aef6135fdd7dbb627f068026c9b8035c9bf7ebc9baca1edd5d028249a62bd0e0a4681c0909915a6adce8b29ecec22d29b50e59c9873e1f3f12b22f8c2a791d926b7b7b3139f77adcd564664f678e88b9bdfe714f24e00633322cf08a33cd2f25c5c1f554badb15b0d0b0e95ef39ed0c0445e936da29d32f6126daa8dc1de3e8ef9658aae93f5c6823fbf8542e922635393fdc46c4577f8c14efd6c9c8c87c3defb19e610906c831e06d6ca6ed1df124ea02b054257d5bc81540a76300000020e6d4aa5ff04a4a92b8e2788d02d7a237b5b4f8ad42f2d9e9fdd3eb72c95a640429a0d6a6c015261cc90d2805992f57416456a3777d320a0162302f3d19e5ea44d629b5790ec40a29b5848bbb2b2d54422d99955063c3bf8ae6cf06118364f5da083d9f832a68e483832312e813e53e9ef0586ee2d8938dbcd7aa88d26e8c77c61edb5e4dd777972024bc1b88b162aa134cc192cb36ab8275d3bb8ffb8d68e3df4a74e41d5808380f26e9b88c29d1348ed155386be12660a34265a73d49b129735d9f28d56d0d264b45bec7d98853c9f24f383c3f2370bcacf3ab968183ccbd0ef05d68b7cd7e3801d172264ad3815d92fb3c2318f70ccd130146cfe5d9d32a895d5a5dd3511550459a8f55f6b768b9083dd6c39ca12f784d5b43af655fb81265845fb14b5b9f2a0a7426101c2b34ff8d0e13f17abac818efc56d53e1dac094765879545548412228f622d0d7f389bd6df5d4c46225f6eef91fd320bab61b48c4231bde3446a38ac145d719bc0f994ab865ea1218747cf8df38645c641323b25653b891b351b769a103456efe7445020330e70a12ba0dafbc8538c89a13e6dcf082a60d372ab4dad96a4cfdfcb6610331d8d92cd5b19c7b0f918291d22f0f2ba531999b710c6d7f5c388de245c707da96e77c03dfa6571f0bac543e22bd20d69414ca36f6d47a6058cde404e6dc4d409908129ec4453056621af99206a5232b299015463bc073363c7a1fccf87707a7b5bc794e534e1b1a734ff50f70718dfcbd1407bd7eefcfbb2b4baa0603558a46941b7b2009c6ab92b2a63551dc4b2491cb630d7ef6865a63533f00e285541cda3c512a790373f6240563a4ac18f6b806cefd21eadc80399dfa990a32f870f760701cdd637c33d520e489ff151271c5e17b9f2b4273095a526f496c59a6867a9165f3d1a7d571fe0c371419f330175bef683411b90288da180649683ee133662de6ccea2367bf9659f95ecb61f87373efb42e8456fbeaad997ca9f81cf69166d6b3e3c1328d7a1b8d8d2c3380dee8e9b3abba8eb1084b90a343157a7656859cce3bdd031033319bd4421af536adeed690d89f6f7aa8e56f537b0032bc4f3019c59bfec62e1ba2d28444e9d6aa09e9d43547f85126a78a661f968849cd3b240a505890f52d9aea4dc14e74a70e8e26116b830df69431e6482a13b456dc638e0938639dcad27b5d066a1723465f03b510dd0c590793ea249bbd962f9c38308b125d22606f8eafea230278b6ce2089b79e3170884b5294ccfbb8841685d94bf357ba19c29c877c2c9523404ad1b3a39ca41958f71ac52421e85ceccfaee374088a0e78b6b264336d38e2dd29fc245ce8fd9c41ee1ae8b04d5451afa4146fba3d8f5d7dde03cb3fb34900b29d5951b036196487f82c8530cecca6cef516ca2ece25e5db4288b5259c7d0a04d9ce9f9184b8d18200000008299ec90dff126fddad3f83e26cc3b5d36dd3c6755dcc798ccca6f864c7e756a07bea5fa71404e0e4e79fae45bfedf855b2ad25aa0aa36873ece9f8bb1283ea03c1fc0fa651b1c879c9d1b3773a79303c5285cbc86ee0f0960ff1e1967d0ff3c7cf0cfe1f350f8d1f7d46686e1a16bbd3c736bdc5c6db53641ffebc50029b7fb4da72b87dde728c81861124421a2bb876f39fd72741bcc6f0dd1b377d3c7f44675b3b5a7eacf53a1bfbc4b7d2b026525918c8bb48e547af0be2a25611d4cf4c8c2443a541699bed15c6a69dd14743d93ce0e4aa24b15f07f4cca0d5ee1f003750723da9d62f9bfeb0aecf7535630b71eca46075ce20f8db462a6d6a6ce16468f343cec2f711c1a9c73631403d75075e81a4e4d56d1ec408225590f7d85b83f20e8e56842c32b627ebc9c50ddd69eee24f15e684f2adb47b5987c36aa207527e4f9d08c819cbfc32aa9f682a69c1239cb5617617072e907e4dadeb2dae6972322ec0372322fbd7ab0e03ae68323f64f564c80b79b1ce112ad2ac1ebd8d39e1fc34b8adb06149d2e8140b4bf5dd058ba18afdc13677025d78ed8f8ee6195350fa60af134d65ec2b1b8bbd9e06f142281ac426b2ea18f007b82fd38582366702599a824d9ce667a9b3d7884c8174076a5275777e38328d935fb49e4dcf9c79c25c0d2221e3806f7ecb00c08db52280efcc76db17d42095b013e105e1e7c42e6db642a7a2379e1be3e1bcd4f05ef5fffdcf35ff24130885469887f94ca836dd70aef5d28dde96a5de92ee91b3921a066fcd0372cc492417ed4c54ed8a613e475b690f674fa58565809307c22abe864d0c2bcc08b18a71b311a00d5a1a3808a56d42845d86d3a6057beea56cac850e2bd0f54b45d7a373102f73a7126b15fe705978977835a37f4373c6f20ecbfa91bef3d7f2d4d9699e05b675b6adfc3cd638068c02";
  bytes block_1 =
    hex"0000000100000000c1806fb5caeb92b0db338ce401773f45cccb358d6d4d1bad3b5a08434bdc4ed100000000b3ca144ed9b63ad7f53831fee93df78356eb7ca97eec5078195442f0b5d935b600000000bc74f656e006f91a2021a190b855d5b2057fa2c30fa298570e6521626bb64cd6000000005d17477e1d5439a453dcf975d81e7827439d06696961cc1c75ee20b3aac13549000000003162167cfcd23ec8a18ecdcd0c215713c39972e1885263ecf563166e9ad483790000002002d39feec7377bb890dc52b105208259532ec39601f9f53046c9b45d3b24670f000000202a1943f5041801d3b30d4553d4d6828e4753a16466c33fe0e457ca4fff3689ad00000008a03276037876b0a1bdfe71854eda8c0724477e078582d1ab1aefa497f2bc0dba000000019fdbf147878224fc1b64592242cea18503449cfaa965764abbd7b9b7a8d3575000000001cce778d2aa7debbadab4abb1da62b177be34e827d819f0ddc9ca56c107d5af7d000000205f6ba087e4112bb889ab6ac63a74abdecf064a1c8ce6cd7fe1bb613ab2393cc09e6e73f958801ec148715df22da5f3cdaa0593354a04470889a586bad683da4db91e5db16af028a12a8caefd576d32a74ac120407967a8014d72cad5085820f24eb54cda9ec7cec46df4b9688b184d0dea18b59dfd68ed19f9e8b0fa23a99de1c4691b2dab87eb24cf72665cc005d5144ccd69c48a880dd13b0594012d9e930d835a6ab247b6964ed2444035d7a96f9174a1aafe6b86dc934bfac6adc0ae7290520f5bc0a8e477c4d5e42239a6c3adbeefd86a21ee421e85d61c8ec9c0b4764ba62d2612c14c8c4bd9b4499f2e2ff24c495c350e2e8b83cdd1ed27e3c0b4f8cb1920adece16355a2612aa88f48cac8102657cb9f1d456cb3d263e2c2787e4a5cc417c04cdc1752e1fddaae1b9dc709727d22269f79e55982fd52c79d7bdb04367aaa49284d398dcf48ef0db5d353d92e52a3529431b5a1f1ad0d03269998d06875ebfd6acd4ce703c7206e22088156aa8a2de2cbdca7316ffc0bf056cffc2ee35db01b93cec244e8a970ebddc2816c582318c51fb23336fc213504cfe8f3ac39245410a0a677110ab7de23b78e41f98b648550a596c8df69a0407d2dcb686a343777955eeaaa8ca093e04f53a3517ea7b9d8a491f10033128626b5dff1f4ce50b6efb3e48e966efd8e5c3666b57d9e48d50b6b3400f50ca12edcc6004489ff1d3aa90011d79b003b603155b270b183ccaed4bcbeeb3c5036ac29b8684ba16d84983e5ab16e9d1a377428958fbd09aeae6f6e69a72d108a2be42135d459b2fc2ae52703e6c8ba9d7b3dba87fa5475f67560d464fe5edd2cbd20fc7838fdecf99dd42bddfee0c275563cb3f893a8793db306ef02553a35b61ce5631e2986961c6d769e1cb8c841db42bd23abb940f32da10d3f297b294a96afad312f0a30a1196f9024125019c4b82154ef7f0af1104a6f8bdca62e674d2d02099e4acf9af2f0a8abd6ef966a52f9dee5efd1a1e2619477620a47e503ad694271603c935df4ee5d294cf39aafb02209a09c9a45fb14704b8bec73fe4cd693852a76fc01354baa2f6045ddf74195e167025152aea30f40ef3c2079e9c4ade365b522d623fdd161e9fadc779fc86752dd509e5ce2a8f6e0aa3a9d4f77862739b9472a17180754e8e7d417f9fd7aef6135fdd7dbb627f068026c9b8035c9bf7ebc9baca1edd5d028249a62bd0e0a4681c0909915a6adce8b29ecec22d29b50e59c9873e1f3f12b22f8c2a791d926b7b7b3139f77adcd564664f678e88b9bdfe714f24e00633322cf08a33cd2f25c5c1f554badb15b0d0b0e95ef39ed0c0445e936da29d32f6126daa8dc1de3e8ef9658aae93f5c6823fbf8542e922635393fdc46c4577f8c14efd6c9c8c87c3defb19e610906c831e06d6ca6ed1df124ea02b054257d5bc81540a76300000020e6d4aa5ff04a4a92b8e2788d02d7a237b5b4f8ad42f2d9e9fdd3eb72c95a640429a0d6a6c015261cc90d2805992f57416456a3777d320a0162302f3d19e5ea44d629b5790ec40a29b5848bbb2b2d54422d99955063c3bf8ae6cf06118364f5da083d9f832a68e483832312e813e53e9ef0586ee2d8938dbcd7aa88d26e8c77c61edb5e4dd777972024bc1b88b162aa134cc192cb36ab8275d3bb8ffb8d68e3df4a74e41d5808380f26e9b88c29d1348ed155386be12660a34265a73d49b129735d9f28d56d0d264b45bec7d98853c9f24f383c3f2370bcacf3ab968183ccbd0ef05d68b7cd7e3801d172264ad3815d92fb3c2318f70ccd130146cfe5d9d32a895d5a5dd3511550459a8f55f6b768b9083dd6c39ca12f784d5b43af655fb81265845fb14b5b9f2a0a7426101c2b34ff8d0e13f17abac818efc56d53e1dac094765879545548412228f622d0d7f389bd6df5d4c46225f6eef91fd320bab61b48c4231bde3446a38ac145d719bc0f994ab865ea1218747cf8df38645c641323b25653b891b351b769a103456efe7445020330e70a12ba0dafbc8538c89a13e6dcf082a60d372ab4dad96a4cfdfcb6610331d8d92cd5b19c7b0f918291d22f0f2ba531999b710c6d7f5c388de245c707da96e77c03dfa6571f0bac543e22bd20d69414ca36f6d47a6058cde404e6dc4d409908129ec4453056621af99206a5232b299015463bc073363c7a1fccf87707a7b5bc794e534e1b1a734ff50f70718dfcbd1407bd7eefcfbb2b4baa0603558a46941b7b2009c6ab92b2a63551dc4b2491cb630d7ef6865a63533f00e285541cda3c512a790373f6240563a4ac18f6b806cefd21eadc80399dfa990a32f870f760701cdd637c33d520e489ff151271c5e17b9f2b4273095a526f496c59a6867a9165f3d1a7d571fe0c371419f330175bef683411b90288da180649683ee133662de6ccea2367bf9659f95ecb61f87373efb42e8456fbeaad997ca9f81cf69166d6b3e3c1328d7a1b8d8d2c3380dee8e9b3abba8eb1084b90a343157a7656859cce3bdd031033319bd4421af536adeed690d89f6f7aa8e56f537b0032bc4f3019c59bfec62e1ba2d28444e9d6aa09e9d43547f85126a78a661f968849cd3b240a505890f52d9aea4dc14e74a70e8e26116b830df69431e6482a13b456dc638e0938639dcad27b5d066a1723465f03b510dd0c590793ea249bbd962f9c38308b125d22606f8eafea230278b6ce2089b79e3170884b5294ccfbb8841685d94bf357ba19c29c877c2c9523404ad1b3a39ca41958f71ac52421e85ceccfaee374088a0e78b6b264336d38e2dd29fc245ce8fd9c41ee1ae8b04d5451afa4146fba3d8f5d7dde03cb3fb34900b29d5951b036196487f82c8530cecca6cef516ca2ece25e5db4288b5259c7d0a04d9ce9f9184b8d18200000008299ec90dff126fddad3f83e26cc3b5d36dd3c6755dcc798ccca6f864c7e756a07bea5fa71404e0e4e79fae45bfedf855b2ad25aa0aa36873ece9f8bb1283ea03c1fc0fa651b1c879c9d1b3773a79303c5285cbc86ee0f0960ff1e1967d0ff3c7cf0cfe1f350f8d1f7d46686e1a16bbd3c736bdc5c6db53641ffebc50029b7fb4da72b87dde728c81861124421a2bb876f39fd72741bcc6f0dd1b377d3c7f44675b3b5a7eacf53a1bfbc4b7d2b026525918c8bb48e547af0be2a25611d4cf4c8c2443a541699bed15c6a69dd14743d93ce0e4aa24b15f07f4cca0d5ee1f003750723da9d62f9bfeb0aecf7535630b71eca46075ce20f8db462a6d6a6ce16468f343cec2f711c1a9c73631403d75075e81a4e4d56d1ec408225590f7d85b83f20e8e56842c32b627ebc9c50ddd69eee24f15e684f2adb47b5987c36aa207527e4f9d08c819cbfc32aa9f682a69c1239cb5617617072e907e4dadeb2dae6972322ec0372322fbd7ab0e03ae68323f64f564c80b79b1ce112ad2ac1ebd8d39e1fc34b8adb06149d2e8140b4bf5dd058ba18afdc13677025d78ed8f8ee6195350fa60af134d65ec2b1b8bbd9e06f142281ac426b2ea18f007b82fd38582366702599a824d9ce667a9b3d7884c8174076a5275777e38328d935fb49e4dcf9c79c25c0d2221e3806f7ecb00c08db52280efcc76db17d42095b013e105e1e7c42e6db642a7a2379e1be3e1bcd4f05ef5fffdcf35ff24130885469887f94ca836dd70aef5d28dde96a5de92ee91b3921a066fcd0372cc492417ed4c54ed8a613e475b690f674fa58565809307c22abe864d0c2bcc08b18a71b311a00d5a1a3808a56d42845d86d3a6057beea56cac850e2bd0f54b45d7a373102f73a7126b15fe705978977835a37f4373c6f20ecbfa91bef3d7f2d4d9699e05b675b6adfc3cd638068c02";
  bytes block_2 =
    hex"000000020000002002d39feec7377bb890dc52b105208259532ec39601f9f53046c9b45d3b24670f000000202a1943f5041801d3b30d4553d4d6828e4753a16466c33fe0e457ca4fff3689ad00000008a03276037876b0a1bdfe71854eda8c0724477e078582d1ab1aefa497f2bc0dba000000019fdbf147878224fc1b64592242cea18503449cfaa965764abbd7b9b7a8d3575000000001cce778d2aa7debbadab4abb1da62b177be34e827d819f0ddc9ca56c107d5af7d0000002002d39feec7377bb890dc52b105208259532ec39601f9f53046c9b45d3b24670f000000202a1943f5041801d3b30d4553d4d6828e4753a16466c33fe0e457ca4fff3689ad00000008a03276037876b0a1bdfe71854eda8c0724477e078582d1ab1aefa497f2bc0dba000000020b14a64b2ce9545082be413f70fa646af322adfb118b031ba881068e8aee9f7700000002372b680d22af2a90e8790c5c939c54164ebf431b60e15dabc2167aa9fb096f28000000000000000000000000";

  function setUp() public {
    rollup = new Rollup();
    helper = new DecodeHelper();
  }

  function testDecoderDiffRoot() public {
    bytes32 diffRoot = helper.computeDiffRoot(block_1);
    assertEq(
      0x24d267ed5c77b8fcbae449fb0a824d65b264377528285c2d0657eea52cdc7995,
      diffRoot,
      "Invalid diff root"
    );
  }

  function testDecoder() public {
    rollup.process(bytes(""), block_1);
    rollup.process(bytes(""), block_2);
  }

  function testDecoderFirstBlock() public {
    rollup.process(bytes(""), block_0);
  }
}
